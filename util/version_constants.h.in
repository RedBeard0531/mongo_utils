/*    Copyright 2016 10gen Inc.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

#include <initializer_list>

#include "mongo/base/string_data.h"

// NOTE: You almost certainly don't want to include this file directly. Instead, access this
// information via the VersionInfoInterface singleton. To enforce this restriction we only allow
// inclusion of this file from files that have explicitly whitelisted it. Additionally, since this
// file is only ever included in .cpp files, it makes some sense to use an unnamed namespace here.

#ifndef MONGO_UTIL_VERSION_CONSTANTS_H_WHITELISTED
#error "Cannot include mongo/util/version_constants.h"
#endif

namespace mongo {
namespace version {
namespace {

constexpr auto kVersion = "@mongo_version@"_sd;
constexpr int kMajorVersion = @mongo_version_major@;
constexpr int kMinorVersion = @mongo_version_minor@;
constexpr int kPatchVersion = @mongo_version_patch@;
constexpr int kExtraVersion = @mongo_version_extra@;
constexpr auto kVersionExtraStr = "@mongo_version_extra_str@"_sd;
constexpr auto kGitVersion = "@mongo_git_hash@"_sd;
constexpr auto kAllocator = "@buildinfo_allocator@"_sd;
constexpr auto kJsEngine = "@buildinfo_js_engine@"_sd;

// TODO: In C++14, make these constexpr too.
const std::initializer_list<StringData> kModulesList = @buildinfo_modules@;
const std::initializer_list<VersionInfoInterface::BuildInfoTuple> kBuildEnvironment =
    @buildinfo_environment_data@;

}  // namespace
}  // namespace version
}  // namespace mongo
